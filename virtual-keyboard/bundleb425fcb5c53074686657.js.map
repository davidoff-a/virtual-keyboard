{"version":3,"file":"bundleb425fcb5c53074686657.js","mappings":"omMAGMA,EAAW,CAACC,EAAaC,EAAYC,KACzC,MAAMC,EAAQC,SAASC,cAAcL,GAKrC,OAJAG,EAAMG,UAAUC,OAAON,GACnBO,OAAOC,QAAQP,GAAWQ,QAC5BF,OAAOC,QAAQP,GAAWS,SAASC,GAAWT,EAAMU,aAAaD,EAAO,GAAIA,EAAO,MAE9ET,GAWQ,MACf,MAAMW,EAAOV,SAASW,cAAc,SAC9BC,EAAYjB,EAAS,MAAO,CAAC,aAAc,IAC3CkB,EAAWlB,EAAS,WAAY,CAAC,WAAY,IAC7CmB,EAAanB,EAAS,MAAO,CAAC,eAAgB,OAAQ,IAC5DiB,EAAUG,OAAOF,GACjBD,EAAUG,OAAOD,GACjBJ,EAAKK,OAAOH,IAGdI,GAEA,MAAMC,EAAa,IACbC,EAAclB,SAASW,cAAc,iBArBxB,IAACQ,EAAAA,EAsBTD,EAAaD,EArBdV,SAASa,IACf,MAAMC,EAAK1B,EAAS,MAAO,CAAC,YAAayB,EAAIE,SAAU,CAAE,YAAaF,EAAIG,OAC1EF,EAAGG,YAAcJ,EAAIK,MACrBN,EAASJ,OAAOM,MAmBpB,MAAMK,EAAc,CAClBC,IAAK,MACLC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,aAAc,GACdC,YAAa,GACbC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,UAAW,IAGPC,EAAQrC,SAASW,cAAc,YAErCX,SAASsC,iBAAiB,WAAYC,IACpC,MAAMC,EAAUxC,SAASyC,iBAAiB,WACpCC,EAAU,IAAIF,GAASG,QAAQC,GAAQA,EAAIC,aAAa,eAAiBN,EAAEhB,OAElE,QAAXgB,EAAEhB,OACAc,IACFA,EAAMS,OAAS,KACfT,EAAMU,SAERR,EAAES,kBAEU,UAAVT,EAAEnB,KACJ,IAAIoB,GAASjC,SAASqC,IACpB,MAAMK,EAAUL,EAAIC,aAAa,aAC3BK,EAAcjC,EAAW0B,QAAQvB,GAAQA,EAAIG,OAAS0B,IAC5DL,EAAIpB,YAAc0B,EAAY,GAAGC,UAAYD,EAAY,GAAGC,UAAYD,EAAY,GAAGzB,cAG/D2B,IAAxB1B,EAAYa,EAAEhB,OAChB8B,QAAQC,IAAI,4BAA6B5B,EAAYa,EAAEhB,OACnDc,IACFA,EAAMb,aAAeE,EAAYa,EAAEhB,QAE5Bc,IACTA,EAAMb,aAAee,EAAEnB,KAGzBsB,EAAQ,GAAGxC,UAAUC,IAAI,aAG3BH,SAASsC,iBAAiB,SAAUC,IAClC,MACMG,EAAU,IADA1C,SAASyC,iBAAiB,YACbE,QAAQC,GAAQA,EAAIC,aAAa,eAAiBN,EAAEhB,OACnE,UAAVgB,EAAEnB,KAEJ,IADapB,SAASyC,iBAAiB,YAC7BlC,SAASqC,IACjB,MAAMK,EAAUL,EAAIC,aAAa,aAC3BK,EAAcjC,EAAW0B,QAAQvB,GAAQA,EAAIG,OAAS0B,IAC5DL,EAAIpB,YAAc0B,EAAY,GAAGzB,SAGrCiB,EAAQ,GAAGxC,UAAUqD,OAAO,c","sources":["webpack://virtual-keyboard/./src/index.js"],"sourcesContent":["import './scss/main.scss';\nimport keysData from './assets/json/keys.json';\n\nconst createEl = (tagSelector, arrClasses, objAtribs) => {\n  const tagEl = document.createElement(tagSelector);\n  tagEl.classList.add(...arrClasses);\n  if (Object.entries(objAtribs).length) {\n    Object.entries(objAtribs).forEach((attrib) => tagEl.setAttribute(attrib[0], attrib[1]));\n  }\n  return tagEl;\n};\n\nconst renderKeys = (targetEl, arrKeys) => {\n  arrKeys.forEach((key) => {\n    const el = createEl('div', ['button', ...key.classes], { 'data-code': key.code });\n    el.textContent = key.label;\n    targetEl.append(el);\n  });\n};\n\nconst keyboard = () => {\n  const root = document.querySelector('#root');\n  const container = createEl('div', ['container'], {});\n  const keyTable = createEl('textarea', ['textOut'], {});\n  const keyWrapper = createEl('div', ['keys-wrapper', 'row'], {});\n  container.append(keyTable);\n  container.append(keyWrapper);\n  root.append(container);\n};\n\nkeyboard();\n\nconst keysLayout = keysData.eng;\nconst keysWrapper = document.querySelector('.keys-wrapper');\nrenderKeys(keysWrapper, keysLayout);\nconst association = {\n  Tab: '   ',\n  CapsLock: '',\n  ShiftRight: '',\n  ShiftLeft: '',\n  ControlRight: '',\n  ControlLeft: '',\n  AltRight: '',\n  AltLeft: '',\n  MetaLeft: '',\n  MetaRight: '',\n};\n\nconst tablo = document.querySelector('.textOut');\n\ndocument.addEventListener('keydown', (e) => {\n  const buttons = document.querySelectorAll('.button');\n  const choosen = [...buttons].filter((btn) => btn.getAttribute('data-code') === e.code);\n\n  if (e.code === 'Tab') {\n    if (tablo) {\n      tablo.value += '  ';\n      tablo.focus();\n    }\n    e.preventDefault();\n  }\n  if (e.key === 'Shift') {\n    [...buttons].forEach((btn) => {\n      const keyCode = btn.getAttribute('data-code');\n      const keyToChange = keysLayout.filter((key) => key.code === keyCode);\n      btn.textContent = keyToChange[0].optValue1 ? keyToChange[0].optValue1 : keyToChange[0].label;\n    });\n  }\n  if (association[e.code] !== undefined) {\n    console.log('#####: element outputs =>', association[e.code]);\n    if (tablo) {\n      tablo.textContent += association[e.code];\n    }\n  } else if (tablo) {\n    tablo.textContent += e.key;\n  }\n\n  choosen[0].classList.add('active');\n});\n\ndocument.addEventListener('keyup', (e) => {\n  const buttons = document.querySelectorAll('.button');\n  const choosen = [...buttons].filter((btn) => btn.getAttribute('data-code') === e.code);\n  if (e.key === 'Shift') {\n    const btns = document.querySelectorAll('.button');\n    [...btns].forEach((btn) => {\n      const keyCode = btn.getAttribute('data-code');\n      const keyToChange = keysLayout.filter((key) => key.code === keyCode);\n      btn.textContent = keyToChange[0].label;\n    });\n  }\n  choosen[0].classList.remove('active');\n});\n"],"names":["createEl","tagSelector","arrClasses","objAtribs","tagEl","document","createElement","classList","add","Object","entries","length","forEach","attrib","setAttribute","root","querySelector","container","keyTable","keyWrapper","append","keyboard","keysLayout","keysWrapper","targetEl","key","el","classes","code","textContent","label","association","Tab","CapsLock","ShiftRight","ShiftLeft","ControlRight","ControlLeft","AltRight","AltLeft","MetaLeft","MetaRight","tablo","addEventListener","e","buttons","querySelectorAll","choosen","filter","btn","getAttribute","value","focus","preventDefault","keyCode","keyToChange","optValue1","undefined","console","log","remove"],"sourceRoot":""}