{"version":3,"file":"bundle2cc394f06bfe77c258eb.js","mappings":"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","sources":["webpack://virtual-keyboard/./src/index.js"],"sourcesContent":["import './scss/main.scss';\nimport keysData from './assets/json/keys.json';\n\nconst createEl = (tagSelector, arrClasses, objAtribs) => {\n  const tagEl = document.createElement(tagSelector);\n  tagEl.classList.add(...arrClasses);\n  if (Object.entries(objAtribs).length) {\n    Object.entries(objAtribs).forEach((attrib) => tagEl.setAttribute(attrib[0], attrib[1]));\n  }\n  return tagEl;\n};\n\nlet capsMode;\n\nconst renderKeys = (targetEl, arrKeys) => {\n  targetEl.innerHTML = '';\n  arrKeys.forEach((key) => {\n    const el = createEl('div', ['button', ...key.classes], { 'data-code': key.code });\n    if (key.optValue1) {\n      if (capsMode) {\n        el.textContent = key.label.toUpperCase();\n      }\n    } else {\n      el.textContent = key.label;\n    }\n    el.textContent =\n      capsMode && key.optValue1 ? (el.textContent = key.label.toUpperCase()) : (el.textContent = key.label);\n    targetEl.append(el);\n  });\n};\n\nconst keyboard = () => {\n  const root = document.querySelector('#root');\n  const container = createEl('div', ['container'], {});\n  const keyTable = createEl('textarea', ['textOut'], {});\n  const keyWrapper = createEl('div', ['keys-wrapper', 'row'], {});\n  container.append(keyTable);\n  container.append(keyWrapper);\n  root.append(container);\n};\n\nkeyboard();\n\nlet keysLayout = keysData.eng;\nconst keysWrapper = document.querySelector('.keys-wrapper');\nrenderKeys(keysWrapper, keysLayout);\nconst association = {\n  Tab: '   ',\n  CapsLock: '',\n  ShiftRight: '',\n  ShiftLeft: '',\n  ControlRight: '',\n  ControlLeft: '',\n  AltRight: '',\n  AltLeft: '',\n  MetaLeft: '',\n  MetaRight: '',\n};\n\nwindow.addEventListener('focus', () => {\n  renderKeys(keysWrapper, keysLayout);\n});\n\nconst tablo = document.querySelector('.textOut');\n\nfunction handleKeyDown(e) {\n  const buttons = document.querySelectorAll('.button');\n  const choosen = [...buttons].filter((btn) => btn.getAttribute('data-code') === e.code);\n  if (keysLayout.some((unit) => unit.code === e.code)) {\n    if (e.code === 'Tab') {\n      if (tablo) {\n        tablo.focus();\n        tablo.value += '  ';\n      }\n      e.preventDefault();\n    }\n    if (e.key === 'Shift') {\n      [...buttons].forEach((btn) => {\n        const keyCode = btn.getAttribute('data-code');\n        const keyToChange = keysLayout.filter((key) => key.code === keyCode);\n        if (keyToChange[0].optValue1) {\n          if (e.getModifierState('CapsLock') && keyToChange[0].label.toUpperCase() === keyToChange[0].optValue1) {\n            btn.textContent = keyToChange[0].label;\n          } else {\n            btn.textContent = keyToChange[0].optValue1;\n          }\n        }\n      });\n    }\n    if (e.key === 'CapsLock') {\n      capsMode = !capsMode;\n      renderKeys(keysWrapper, keysLayout);\n    }\n    if (association[e.code] !== undefined) {\n      if (tablo) {\n        tablo.focus();\n        tablo.textContent += association[e.code];\n      }\n    } else if (tablo) {\n      tablo.textContent += e.key;\n    }\n\n    choosen[0].classList.add('active', 'keyAnimation');\n  }\n  if (e.altKey && e.shiftKey) {\n    keysLayout = keysLayout === keysData.eng ? keysData.ru : keysData.eng;\n    renderKeys(keysWrapper, keysLayout);\n  }\n}\n\nfunction handleKeyUp(e) {\n  const buttons = document.querySelectorAll('.button');\n  const choosen = [...buttons].filter((btn) => btn.getAttribute('data-code') === e.code);\n  if (keysLayout.some((unit) => unit.code === e.code)) {\n    if (e.key === 'Shift') {\n      const btns = document.querySelectorAll('.button');\n      [...btns].forEach((btn) => {\n        const keyCode = btn.getAttribute('data-code');\n        const keyToChange = keysLayout.filter((key) => key.code === keyCode);\n        btn.textContent =\n          capsMode && btn.classList.contains('letter') ? keyToChange[0].label.toUpperCase() : keyToChange[0].label;\n      });\n    }\n    choosen[0].classList.remove('active', 'keyAnimation');\n  }\n}\n\ndocument.addEventListener('keydown', (e) => {\n  handleKeyDown(e);\n});\n\ndocument.addEventListener('keyup', (e) => {\n  handleKeyUp(e);\n});\n\ndocument.addEventListener('mousedown', (e) => {\n  const { target } = e;\n  if (target && target.classList.contains('button')) {\n    const eCode = target.getAttribute('data-code');\n    const eKey = keysLayout.filter((item) => item.code === eCode)[0].label;\n    handleKeyDown(new KeyboardEvent('keydown', { code: eCode, key: eKey }));\n  }\n});\n\ndocument.addEventListener('mouseup', (e) => {\n  const { target } = e;\n  if (target && target.classList.contains('button')) {\n    const eCode = target.getAttribute('data-code');\n    const eKey = keysLayout.filter((item) => item.code === eCode)[0].label;\n    handleKeyUp(new KeyboardEvent('keyup', { code: eCode, key: eKey }));\n  }\n});\n"],"names":["createEl","tagSelector","arrClasses","objAtribs","tagEl","document","createElement","classList","add","Object","entries","length","forEach","attrib","setAttribute","capsMode","renderKeys","targetEl","arrKeys","innerHTML","key","el","classes","code","optValue1","textContent","label","toUpperCase","append","root","querySelector","container","keyTable","keyWrapper","keyboard","keysLayout","keysWrapper","association","Tab","CapsLock","ShiftRight","ShiftLeft","ControlRight","ControlLeft","AltRight","AltLeft","MetaLeft","MetaRight","window","addEventListener","tablo","handleKeyDown","e","buttons","querySelectorAll","choosen","filter","btn","getAttribute","some","unit","focus","value","preventDefault","keyCode","keyToChange","getModifierState","undefined","altKey","shiftKey","handleKeyUp","contains","remove","target","eCode","eKey","item","KeyboardEvent"],"sourceRoot":""}